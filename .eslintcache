[{"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\index.js":"1","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\App.js":"2","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\routes.js":"3","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\paths.js":"4","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Index\\index.js":"5","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\RestProvider.js":"6","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\api.js":"7","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Dashboard\\index.js":"8","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\components\\Dheader.js":"9","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cardapio\\index.js":"10","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\CardapioProvider.js":"11","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Config\\index.js":"12","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cliente\\index.js":"13","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\components\\Cheader.js":"14","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\ClienteConfig\\index.js":"15","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cad\\index.js":"16"},{"size":203,"mtime":1609941705725,"results":"17","hashOfConfig":"18"},{"size":175,"mtime":1610231619866,"results":"19","hashOfConfig":"18"},{"size":838,"mtime":1610466022944,"results":"20","hashOfConfig":"18"},{"size":489,"mtime":1610466084278,"results":"21","hashOfConfig":"18"},{"size":7832,"mtime":1610459282590,"results":"22","hashOfConfig":"18"},{"size":2410,"mtime":1610462906059,"results":"23","hashOfConfig":"18"},{"size":380,"mtime":1610217170755,"results":"24","hashOfConfig":"18"},{"size":3182,"mtime":1610465431174,"results":"25","hashOfConfig":"18"},{"size":1633,"mtime":1610452043558,"results":"26","hashOfConfig":"18"},{"size":11357,"mtime":1610469595192,"results":"27","hashOfConfig":"18"},{"size":925,"mtime":1610395883913,"results":"28","hashOfConfig":"18"},{"size":7527,"mtime":1610457957511,"results":"29","hashOfConfig":"18"},{"size":4756,"mtime":1610462780628,"results":"30","hashOfConfig":"18"},{"size":1495,"mtime":1610458201442,"results":"31","hashOfConfig":"18"},{"size":3622,"mtime":1610459695399,"results":"32","hashOfConfig":"18"},{"size":9122,"mtime":1610465950867,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1jddr4o",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\index.js",[],["73","74"],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\App.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\routes.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\paths.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Index\\index.js",["75"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Navbar, Nav, Form, Button, Modal } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nfunction Home({history}){\r\n    history=useHistory();\r\n    const [rest , setRest] = React.useState(null);\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [email,setEmail] = React.useState(\"\");\r\n    const [senha,setSenha] = React.useState(\"\");\r\n    const [nome,setNome] = React.useState(\"\");\r\n    const [phone,setPhone] = React.useState(\"\");\r\n    const loginClose = () => setShow(false);\r\n    const loginShow = () => setShow(true);\r\n    const cadastroClose = () => setShow2(false);\r\n    const cadastroShow = () => setShow2(true);\r\n    React.useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function cadastro(){\r\n        let data={\r\n            pes_nome:nome,\r\n            pes_email:email,\r\n            pes_senha:senha,\r\n            pes_fone:phone\r\n        }\r\n        try{\r\n            let r = await RestProvider.cadastroCliente(data);\r\n            alert(\"Cadastro realizado com sucesso\");\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function login(){\r\n        try{\r\n            let r = await RestProvider.login(email,senha);\r\n            if(r.adm){\r\n                localStorage.setItem(\"user\",r);\r\n                history.push({pathname:\"/dashboard\",});\r\n            }else{\r\n                localStorage.setItem(\"user\",r.pessoa);\r\n                localStorage.setItem(\"id\",r.pessoa.pes_ID);\r\n                history.push({pathname:\"/cliente\",});\r\n            }\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Inicio</title>\r\n                ):(\r\n                    <title>Inicio</title>\r\n                )}\r\n            </Helmet>\r\n            <header>\r\n                <Navbar className=\"bg-sys\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    {rest && rest.rest_logo ? (\r\n                        <Navbar.Brand href=\"./\">\r\n                            <img src={rest.rest_logo} alt=\"logo\" width=\"30px\" height=\"30px\"/>\r\n                        </Navbar.Brand>\r\n                    ):(\r\n                        <Navbar.Brand href=\"./\">\r\n                        </Navbar.Brand>\r\n                    )}\r\n                    <Navbar.Collapse id=\"navbar\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"./\">Inicio</Nav.Link>\r\n                            <Nav.Link href=\"./cardapio\">Cardapio</Nav.Link>\r\n                        </Nav>\r\n                        <Navbar.Toggle aria-controls=\"navbar\" />\r\n                        <Form inline>\r\n                            <Navbar.Text>\r\n                                <Button variant=\"outline-light\" className=\"my-2 my-sm-0\" onClick={loginShow}>Login</Button>\r\n                                ou\r\n                                <Button variant=\"outline-light\" className=\"my-2 my-sm-0\" onClick={cadastroShow}>Cadastro</Button>\r\n                            </Navbar.Text>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"align-self-center\">\r\n                        {rest && rest.rest_nome ? (\r\n                            <h2>Bem vindo ao restaurante {rest.rest_nome}</h2>\r\n                        ):(\r\n                            <h2>Bem vindo ao restaurante</h2>\r\n                        )}\r\n                        {rest && rest.rest_desc ? (\r\n                            <p>{rest.rest_desc}</p>\r\n                        ):(\r\n                            <p></p>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n            <footer class=\"bg-sys\">\r\n                <Row>\r\n                    <Col lg=\"5\" className=\"d-none d-lg-block text-center\">\r\n                        <p>Genrest Ã© um sistema com o intiuito de ajudar o gerente com controle do cardapio e das reservas feita pelos clientes.</p>\r\n                    </Col>\r\n                    <Col sm=\"12\" lg=\"7\" className=\"text-center\">\r\n                        <p>Redes sociais</p>\r\n                    </Col>\r\n                </Row>\r\n            </footer>\r\n            <Modal show={show} onHide={loginClose} className=\"fade\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control name=\"email\" type=\"email\" value={email} onChange={(event)=>{setEmail(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control name=\"senha\" type=\"password\" value={senha} onChange={(event)=>{setSenha(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Button variant=\"success\" onClick={()=>{login()}}>Login</Button>\r\n                        </Form.Group>\r\n\t\t\t\t\t</Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={show2} onHide={cadastroClose} className=\"fade\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Cadastro</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control name=\"nome\" type=\"text\" value={nome} onChange={(event)=>{setNome(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Telefone</Form.Label>\r\n                            <Form.Control name=\"phone\" type=\"text\" value={phone} onChange={(event)=>{setPhone(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control name=\"email\" type=\"email\" value={email} onChange={(event)=>{setEmail(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control name=\"senha\" type=\"password\" value={senha} onChange={(event)=>{setSenha(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"success\" onClick={()=>{cadastro()}}>Cadastro</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\RestProvider.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\api.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Dashboard\\index.js",["76","77","78","79"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport DHeader from '../../components/Dheader.js';\r\nfunction Dashboard({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [res, setRes] = React.useState([]);\r\n    React.useEffect(() => {\r\n        getData();\r\n        getRes();\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function getRes(){\r\n        try{\r\n            let r = await RestProvider.getRes();\r\n            setRes(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function del(id,key){\r\n        try{\r\n            let r = await RestProvider.delRes(id);\r\n            let res_=res;\r\n            res_.splice(key,1);\r\n            setRes(res_ => [...res_]);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    function fixDate(data,id){\r\n        let r = null;\r\n        let dia = new Date(data);\r\n        switch (id){\r\n            case 1:\r\n                r = dia.getDate();\r\n                break;\r\n            case 2:\r\n                r = dia.getMonth()+1;\r\n                break;\r\n            case 3:\r\n                r = dia.getFullYear();\r\n        }\r\n        return r;\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Dashboard</title>\r\n                ):(\r\n                    <title>Dashboard</title>\r\n                )}\r\n            </Helmet>\r\n            <DHeader dado={{rest:rest,user:user}}/>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center cmain justify-content-center\">\r\n                        <Row>\r\n                            {res.map((item,key) => (\r\n                                <Col>\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Title>Reserva de {item.res_pessoa.pes_nome} para {fixDate(item.res_data,1)}/{fixDate(item.res_data,2)}/{fixDate(item.res_data,3)}</Card.Title>\r\n                                        <Card.Text><Button variant=\"outline-danger\" onClick={()=>{del(item.res_ID,key)}}>Cancelar reserva</Button></Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\components\\Dheader.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cardapio\\index.js",["80","81","82","83","84","85","86","87"],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\CardapioProvider.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Config\\index.js",["88","89"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport DHeader from '../../components/Dheader.js';\r\nimport imageCompression from 'browser-image-compression';\r\nfunction Config({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [rnome, setRnome] = React.useState(\"\");\r\n    const [rdesc, setRdesc] = React.useState(\"\");\r\n    const [rlogo, setRlogo] = React.useState(\"\");\r\n    const [gnome, setGnome] = React.useState(user.pes_nome);\r\n    const [gemail, setGemail] = React.useState(user.pes_email);\r\n    const [gsenha, setGsenha] = React.useState(user.pes_senha);\r\n    const [gfone, setGfone] = React.useState(user.pes_fone);\r\n    const options = {\r\n        maxSizeMB: 0.01,\r\n        maxWidthOrHeight: 1024,\r\n        useWebWorker: true\r\n    }\r\n    React.useEffect(() => {\r\n        getData();\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            let g = await RestProvider.getGen();\r\n            setRest(r);\r\n            setRnome(r.rest_nome);\r\n            setRdesc(r.rest_desc);\r\n            setUser(g);\r\n            setGnome(g.pes_nome);\r\n            setGemail(g.pes_email);\r\n            setGsenha(g.pes_senha);\r\n            setGfone(g.pes_fone);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function Rsave(){\r\n        try{\r\n            let file = document.getElementById('logo').files[0];\r\n            if(file){\r\n                let file_compress = await imageCompression(file, options);\r\n                let reader = new FileReader();\r\n                let img = null;\r\n                reader.readAsDataURL(file_compress);\r\n                img=reader.result;\r\n                reader.onload = async () => {\r\n                    img=reader.result;\r\n                    let rest = {\r\n                        rest_nome:rnome,\r\n                        rest_desc:rdesc,\r\n                        rest_logo:img\r\n                    }\r\n                    let r = await RestProvider.save(rest);\r\n                    setRest(r);\r\n                    alert(\"Dados salvo com sucesso!\");\r\n                };\r\n                reader.onerror = function (error) {\r\n                    console.log('Error: ', error);\r\n                }\r\n            }else{\r\n                let rest = {\r\n                    rest_nome:rnome,\r\n                    rest_desc:rdesc,\r\n                    rest_logo:rest.rest_logo\r\n                }\r\n                let r = await RestProvider.save(rest);\r\n                setRest(r);\r\n                alert(\"Dados salvo com sucesso!\");\r\n            }\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function Gsave(){\r\n        try{\r\n            let data={\r\n                pes_nome:gnome,\r\n                pes_email:gemail,\r\n                pes_senha:gsenha,\r\n                pes_fone:gfone\r\n            }\r\n            let r = await RestProvider.gen_save(data);\r\n            setUser(r);\r\n            localStorage.setItem(\"user\",r);\r\n            alert(\"Dados salvo com sucesso!\");\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - ConfiguraÃ§Ã£o</title>\r\n                ):(\r\n                    <title>ConfiguraÃ§Ã£o</title>\r\n                )}\r\n            </Helmet>\r\n            <DHeader dado={{rest:rest,user:user}}/>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center cmain justify-content-center\">\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"6\" className=\"pd5\">\r\n                                <Form>\r\n                                    <h3>Dados do restaurante</h3>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Nome do restaurante</Form.Label>\r\n                                        <Form.Control name=\"rnome\" type=\"text\" value={rnome} onChange={(event)=>{setRnome(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>DescriÃ§Ã£o do restaurante</Form.Label>\r\n                                        <Form.Control as=\"textarea\" name=\"rdesc\" value={rdesc} onChange={(event)=>{setRdesc(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Logo marca do restaurante</Form.Label>\r\n                                        <Form.File label=\"Logo marca\" data-browse=\"Buscar\" id=\"logo\" custom value={rlogo} onChange={(event)=>{setRlogo(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button variant=\"outline-success\" onClick={()=>{Rsave()}}>Salvar</Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col sm=\"12\" lg=\"6\" className=\"pd5\">\r\n                                <Form>\r\n                                    <h3>Dados do gerente</h3>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Nome</Form.Label>\r\n                                        <Form.Control name=\"gnome\" type=\"text\" value={gnome} onChange={(event)=>{setGnome(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control name=\"gemail\" type=\"email\" value={gemail} onChange={(event)=>{setGemail(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Telefone</Form.Label>\r\n                                        <Form.Control name=\"gfone\" type=\"text\" value={gfone} onChange={(event)=>{setGfone(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Senha</Form.Label>\r\n                                        <Form.Control name=\"gsenha\" type=\"password\" value={gsenha} onChange={(event)=>{setGsenha(event.target.value)}}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button variant=\"outline-success\" onClick={()=>{Gsave()}}>Salvar</Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Config;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cliente\\index.js",["90","91","92","93","94"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Modal, Form, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport CHeader from '../../components/Cheader.js';\r\nfunction Cliente({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [id, setID] = React.useState(localStorage.getItem(\"id\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [res, setRes] = React.useState([]);\r\n    const [show, setShow] = React.useState(false);\r\n    const [data, setData] = React.useState(\"\");\r\n    const reservaClose = () => setShow(false);\r\n    const reservaShow = () => setShow(true);\r\n    React.useEffect(() => {\r\n        getData();\r\n        getReservas();\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function getReservas(){\r\n        try{\r\n            let r = await RestProvider.getRes(id);\r\n            setRes(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function add(){\r\n        try{\r\n            let r = await RestProvider.makeRes(id,data);\r\n            setRes(res=>[...res,r]);\r\n            reservaClose();\r\n            alert(\"Reserva feita com sucesso\");\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    function fixDate(data,id){\r\n        let r = null;\r\n        let dia = new Date(data);\r\n        switch (id){\r\n            case 1:\r\n                r = dia.getDate();\r\n                break;\r\n            case 2:\r\n                r = dia.getMonth()+1;\r\n                break;\r\n            case 3:\r\n                r = dia.getFullYear();\r\n        }\r\n        return r;\r\n    }\r\n    async function del(id,key){\r\n        try{\r\n            let r = await RestProvider.delRes(id);\r\n            let res_=res;\r\n            res_.splice(key,1);\r\n            setRes(res_ => [...res_]);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Dashboard</title>\r\n                ):(\r\n                    <title>Dashboard</title>\r\n                )}\r\n            </Helmet>\r\n            <CHeader dado={{rest:rest,user:user}}/>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center cmain justify-content-center\">\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"2\">\r\n                                <Button variant=\"outline-success\" onClick={()=>{reservaShow()}}>Fazer reserva</Button>\r\n                            </Col>\r\n                            {res.map((item,key) => (\r\n                                <Col>\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            <Card.Title>Reserva para {fixDate(item.res_data,1)}/{fixDate(item.res_data,2)}/{fixDate(item.res_data,3)}</Card.Title>\r\n                                            <Card.Text><Button variant=\"outline-danger\" onClick={()=>{del(item.res_ID,key)}}>Cancelar reserva</Button></Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n            <Modal show={show} onHide={reservaClose} className=\"fade\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Reserva</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Data</Form.Label>\r\n                            <Form.Control name=\"data\" type=\"date\" value={data} onChange={(event)=>{setData(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"success\" onClick={()=>{add()}}>Adicionar</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Cliente;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\components\\Cheader.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\ClienteConfig\\index.js",["95","96"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport CHeader from '../../components/Cheader.js';\r\nfunction ClienteConfig({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [id, setID] = React.useState(localStorage.getItem(\"id\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [senha, setSenha] = React.useState(\"\");\r\n    const [fone, setFone] = React.useState(\"\");\r\n    React.useEffect(() => {\r\n        getData();\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            let p = await RestProvider.getPessoa(id);\r\n            setUser(p);\r\n            setEmail(p.pes_email);\r\n            setSenha(p.pes_senha);\r\n            setFone(p.pes_fone);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function save(){\r\n        let data={\r\n            pes_email:email,\r\n            pes_senha:senha,\r\n            pes_fone:fone\r\n        }\r\n        try{\r\n            let r = await RestProvider.pes_save(id,data);\r\n            setUser(r);\r\n            setEmail(r.pes_email);\r\n            setSenha(r.pes_senha);\r\n            setFone(r.pes_fone);\r\n            localStorage.setItem(\"user\",r);\r\n            alert(\"Dados salvo com sucesso\");\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Dashboard</title>\r\n                ):(\r\n                    <title>Dashboard</title>\r\n                )}\r\n            </Helmet>\r\n            <CHeader dado={{rest:rest,user:user}}/>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center cmain justify-content-center\">\r\n                        <Form>\r\n                            <h3>Dados do {user.pes_nome}</h3>\r\n                            <Form.Group>\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control name=\"email\" type=\"email\" value={email} onChange={(event)=>{setEmail(event.target.value)}}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Telefone</Form.Label>\r\n                                <Form.Control name=\"fone\" type=\"text\" value={fone} onChange={(event)=>{setFone(event.target.value)}}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                            <Form.Label>Senha</Form.Label>\r\n                                <Form.Control name=\"senha\" type=\"password\" value={senha} onChange={(event)=>{setSenha(event.target.value)}}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"outline-success\" onClick={()=>{save()}}>Salvar</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ClienteConfig;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cad\\index.js",["97","98","99","100"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Card, Form, Modal, Nav, Navbar} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport CardapioProvider from '../../service/provider/CardapioProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nfunction Cad({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [cardapio, setCardapio] = React.useState([]);\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [email,setEmail] = React.useState(\"\");\r\n    const [senha,setSenha] = React.useState(\"\");\r\n    const [nome,setNome] = React.useState(\"\");\r\n    const [phone,setPhone] = React.useState(\"\");\r\n    const loginClose = () => setShow(false);\r\n    const loginShow = () => setShow(true);\r\n    const cadastroClose = () => setShow2(false);\r\n    const cadastroShow = () => setShow2(true);\r\n    React.useEffect(() => {\r\n        getData();\r\n        getCardapio();\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function getCardapio(){\r\n        try{\r\n            let r = await CardapioProvider.getData();\r\n            console.log(r);\r\n            setCardapio(r);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function cadastro(){\r\n        let data={\r\n            pes_nome:nome,\r\n            pes_email:email,\r\n            pes_senha:senha,\r\n            pes_fone:phone\r\n        }\r\n        try{\r\n            let r = await RestProvider.cadastroCliente(data);\r\n            alert(\"Cadastro realizado com sucesso\");\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function login(){\r\n        try{\r\n            let r = await RestProvider.login(email,senha);\r\n            if(r.adm){\r\n                localStorage.setItem(\"user\",r);\r\n                history.push({pathname:\"/dashboard\",});\r\n            }else{\r\n                localStorage.setItem(\"user\",r.pessoa);\r\n                localStorage.setItem(\"id\",r.pessoa.pes_ID);\r\n                history.push({pathname:\"/cliente\",});\r\n            }\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Cardapio</title>\r\n                ):(\r\n                    <title>Cardapio</title>\r\n                )}\r\n            </Helmet>\r\n            <header>\r\n                <Navbar className=\"bg-sys\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    {rest && rest.rest_logo ? (\r\n                        <Navbar.Brand href=\"./\">\r\n                            <img src={rest.rest_logo} alt=\"logo\" width=\"30px\" height=\"30px\"/>\r\n                        </Navbar.Brand>\r\n                    ):(\r\n                        <Navbar.Brand href=\"./\">\r\n                        </Navbar.Brand>\r\n                    )}\r\n                    <Navbar.Collapse id=\"navbar\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"./\">Inicio</Nav.Link>\r\n                            <Nav.Link href=\"./cardapio\">Cardapio</Nav.Link>\r\n                        </Nav>\r\n                        <Navbar.Toggle aria-controls=\"navbar\" />\r\n                        <Form inline>\r\n                            <Navbar.Text>\r\n                                <Button variant=\"outline-light\" className=\"my-2 my-sm-0\" onClick={loginShow}>Login</Button>\r\n                                ou\r\n                                <Button variant=\"outline-light\" className=\"my-2 my-sm-0\" onClick={cadastroShow}>Cadastro</Button>\r\n                            </Navbar.Text>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <Row>\r\n                            {cardapio.map((item) => (\r\n                                <Col>\r\n                                    <Card>\r\n                                        <Card.Header>\r\n                                            {item.com_nome}\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <Card.Title>\r\n                                                <img src={item.com_img} width=\"150px\" height=\"150px\" />\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                R$ {item.com_preco.toString().replace(\".\",\",\")}\r\n                                            </Card.Text>\r\n                                            <Card.Text>\r\n                                                {item.com_desc}\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n            <footer class=\"bg-sys\">\r\n                <Row>\r\n                    <Col lg=\"5\" className=\"d-none d-lg-block text-center\">\r\n                        <p>Genrest Ã© um sistema com o intiuito de ajudar o gerente com controle do cardapio e das reservas feita pelos clientes.</p>\r\n                    </Col>\r\n                    <Col sm=\"12\" lg=\"7\" className=\"text-center\">\r\n                        <p>Redes sociais</p>\r\n                    </Col>\r\n                </Row>\r\n            </footer>\r\n            <Modal show={show} onHide={loginClose} className=\"fade\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control name=\"email\" type=\"email\" value={email} onChange={(event)=>{setEmail(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control name=\"senha\" type=\"password\" value={senha} onChange={(event)=>{setSenha(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Button variant=\"success\" onClick={()=>{login()}}>Login</Button>\r\n                        </Form.Group>\r\n\t\t\t\t\t</Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={show2} onHide={cadastroClose} className=\"fade\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Cadastro</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control name=\"nome\" type=\"text\" value={nome} onChange={(event)=>{setNome(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Telefone</Form.Label>\r\n                            <Form.Control name=\"phone\" type=\"text\" value={phone} onChange={(event)=>{setPhone(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control name=\"email\" type=\"email\" value={email} onChange={(event)=>{setEmail(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Form.email\">\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control name=\"senha\" type=\"password\" value={senha} onChange={(event)=>{setSenha(event.target.value)}} required=\"required\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"success\" onClick={()=>{cadastro()}}>Cadastro</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\nexport default Cad;",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":41,"column":17,"nodeType":"107","messageId":"108","endLine":41,"endColumn":18},{"ruleId":"105","severity":1,"message":"109","line":11,"column":18,"nodeType":"107","messageId":"108","endLine":11,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":20,"column":8,"nodeType":"112","endLine":20,"endColumn":10,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"106","line":41,"column":17,"nodeType":"107","messageId":"108","endLine":41,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":52,"column":9,"nodeType":"116","messageId":"117","endLine":61,"endColumn":10},{"ruleId":"105","severity":1,"message":"109","line":13,"column":18,"nodeType":"107","messageId":"108","endLine":13,"endColumn":25},{"ruleId":"105","severity":1,"message":"118","line":22,"column":12,"nodeType":"107","messageId":"108","endLine":22,"endColumn":17},{"ruleId":"105","severity":1,"message":"119","line":22,"column":18,"nodeType":"107","messageId":"108","endLine":22,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":40,"column":8,"nodeType":"112","endLine":40,"endColumn":10,"suggestions":"120"},{"ruleId":"105","severity":1,"message":"106","line":89,"column":17,"nodeType":"107","messageId":"108","endLine":89,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":114,"column":25,"nodeType":"107","messageId":"108","endLine":114,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":176,"column":53,"nodeType":"123","endLine":176,"endColumn":108},{"ruleId":"124","severity":1,"message":"125","line":185,"column":53,"nodeType":"123","endLine":185,"endColumn":120},{"ruleId":"110","severity":1,"message":"111","line":31,"column":8,"nodeType":"112","endLine":31,"endColumn":10,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":76,"column":31,"nodeType":"107","messageId":"129","endLine":76,"endColumn":35},{"ruleId":"105","severity":1,"message":"109","line":11,"column":18,"nodeType":"107","messageId":"108","endLine":11,"endColumn":25},{"ruleId":"105","severity":1,"message":"130","line":12,"column":16,"nodeType":"107","messageId":"108","endLine":12,"endColumn":21},{"ruleId":"110","severity":1,"message":"131","line":25,"column":8,"nodeType":"112","endLine":25,"endColumn":10,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"115","line":57,"column":9,"nodeType":"116","messageId":"117","endLine":66,"endColumn":10},{"ruleId":"105","severity":1,"message":"106","line":71,"column":17,"nodeType":"107","messageId":"108","endLine":71,"endColumn":18},{"ruleId":"105","severity":1,"message":"130","line":12,"column":16,"nodeType":"107","messageId":"108","endLine":12,"endColumn":21},{"ruleId":"110","severity":1,"message":"133","line":22,"column":8,"nodeType":"112","endLine":22,"endColumn":10,"suggestions":"134"},{"ruleId":"105","severity":1,"message":"109","line":11,"column":18,"nodeType":"107","messageId":"108","endLine":11,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":30,"column":8,"nodeType":"112","endLine":30,"endColumn":10,"suggestions":"135"},{"ruleId":"105","severity":1,"message":"106","line":57,"column":17,"nodeType":"107","messageId":"108","endLine":57,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":125,"column":49,"nodeType":"123","endLine":125,"endColumn":104},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'r' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["138"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'state' is assigned a value but never used.","'setState' is assigned a value but never used.",["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["140"],"no-use-before-define","'rest' was used before it was defined.","usedBeforeDefined","'setID' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getReservas', 'history', and 'user'. Either include them or remove the dependency array.",["141"],"React Hook React.useEffect has missing dependencies: 'getData', 'history', and 'user'. Either include them or remove the dependency array.",["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},{"desc":"144","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"144","fix":"152"},"Update the dependencies array to be: [history, user]",{"range":"153","text":"154"},{"range":"155","text":"154"},{"range":"156","text":"154"},"Update the dependencies array to be: [getReservas, history, user]",{"range":"157","text":"158"},"Update the dependencies array to be: [getData, history, user]",{"range":"159","text":"160"},{"range":"161","text":"154"},[757,759],"[history, user]",[1686,1688],[1271,1273],[1037,1039],"[getReservas, history, user]",[915,917],"[getData, history, user]",[1307,1309]]