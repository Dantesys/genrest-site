[{"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\index.js":"1","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\App.js":"2","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\routes.js":"3","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\paths.js":"4","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Index\\index.js":"5","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\RestProvider.js":"6","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\api.js":"7","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Dashboard\\index.js":"8","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\components\\Dheader.js":"9","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\MesaProvider.js":"10","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Mesa\\index.js":"11","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cardapio\\index.js":"12","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\CardapioProvider.js":"13","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Config\\index.js":"14"},{"size":203,"mtime":1609941705725,"results":"15","hashOfConfig":"16"},{"size":175,"mtime":1610231619866,"results":"17","hashOfConfig":"16"},{"size":689,"mtime":1610407414829,"results":"18","hashOfConfig":"16"},{"size":346,"mtime":1610407398799,"results":"19","hashOfConfig":"16"},{"size":7620,"mtime":1610407352896,"results":"20","hashOfConfig":"16"},{"size":679,"mtime":1610291347044,"results":"21","hashOfConfig":"16"},{"size":380,"mtime":1610217170755,"results":"22","hashOfConfig":"16"},{"size":2811,"mtime":1610374665738,"results":"23","hashOfConfig":"16"},{"size":1758,"mtime":1610407163755,"results":"24","hashOfConfig":"16"},{"size":631,"mtime":1610372539880,"results":"25","hashOfConfig":"16"},{"size":4407,"mtime":1610376543799,"results":"26","hashOfConfig":"16"},{"size":11360,"mtime":1610397314962,"results":"27","hashOfConfig":"16"},{"size":925,"mtime":1610395883913,"results":"28","hashOfConfig":"16"},{"size":1748,"mtime":1610407314000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jddr4o",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\index.js",[],["61","62"],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\App.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\routes.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\paths.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Index\\index.js",["63"],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\RestProvider.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\api.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Dashboard\\index.js",["64","65","66","67"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport MesaProvider from '../../service/provider/MesaProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport image from '../../assets/mesa.png';\r\nimport DHeader from '../../components/Dheader.js';\r\nfunction Dashboard({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [mesas, setMesas] = React.useState([]);\r\n    React.useEffect(() => {\r\n        getData();\r\n        getMesas();\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function getMesas(){\r\n        try{\r\n            let r = await MesaProvider.getData();\r\n            setMesas(r);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Dashboard</title>\r\n                ):(\r\n                    <title>Dashboard</title>\r\n                )}\r\n            </Helmet>\r\n            <DHeader dado={{rest:rest,user:user}}/>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center cmain justify-content-center\">\r\n                        <Row>\r\n                            {mesas.map((item) => (\r\n                                <Col>\r\n                                    <Card className={item.mes_status}>\r\n                                        <Card.Header>\r\n                                            {item.mes_ID}\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <Card.Title>{item.mes_status}</Card.Title>\r\n                                            <Card.Text>\r\n                                                <img src={image} width=\"150px\" height=\"150px\" />\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\components\\Dheader.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\MesaProvider.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Mesa\\index.js",["68","69","70","71"],"import React from 'react';\r\nimport './index.css';\r\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Helmet } from 'react-helmet';\r\nimport RestProvider from '../../service/provider/RestProvider.js';\r\nimport MesaProvider from '../../service/provider/MesaProvider.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport DHeader from '../../components/Dheader.js';\r\nimport image from '../../assets/mesa.png';\r\nimport QRCode from 'qrcode'\r\nfunction Dashboard({history}){\r\n    history=useHistory();\r\n    const [user, setUser] = React.useState(localStorage.getItem(\"user\"));\r\n    const [rest , setRest] = React.useState(null);\r\n    const [mesas, setMesas] = React.useState([]);\r\n    React.useEffect(() => {\r\n        getData();\r\n        getMesas();\r\n        console.log(user);\r\n        console.log(history);\r\n        if(!user){\r\n            history.push({pathname:\"/\"});\r\n        }\r\n    }, []);\r\n    async function makeQR(texto){\r\n        try {\r\n            let r = await QRCode.toDataURL(texto);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function getData(){\r\n        try{\r\n            let r = await RestProvider.getData();\r\n            setRest(r);\r\n            return r;\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function getMesas(){\r\n        try{\r\n            let r = await MesaProvider.getData();\r\n            console.log(r);\r\n            setMesas(r);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function addMesa(){\r\n        try{\r\n            let n = mesas.length+1;\r\n            let qr = await makeQR(n.toString());\r\n            let r = await MesaProvider.addMesa(qr);\r\n            setMesas(mesas => [...mesas, r]);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    async function remMesa(){\r\n        try{\r\n            let r = await MesaProvider.remMesa();\r\n            let mesas_=mesas;\r\n            console.log(mesas_);\r\n            mesas_.pop();\r\n            console.log(mesas_);\r\n            setMesas(mesas_ => [...mesas_]);\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    return(\r\n        <Container fluid className=\"bgimgfull\">\r\n            <Helmet>\r\n                {rest && rest.rest_nome ? (\r\n                    <title>{rest.rest_nome} - Mesas</title>\r\n                ):(\r\n                    <title>Mesas</title>\r\n                )}\r\n            </Helmet>\r\n            <DHeader dado={{rest:rest,user:user}}/>\r\n            <main>\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <Row>\r\n                            <Col sm=\"12\" lg=\"2\">\r\n                                <Button variant=\"outline-success\" onClick={addMesa}>Adicionar mesa</Button>\r\n                                <Button variant=\"outline-danger\" onClick={remMesa}>Remover mesa</Button>\r\n                            </Col>\r\n                            <Row>\r\n                                {mesas.map((item) => (\r\n                                    <Col>\r\n                                        <Card className={item.mes_status}>\r\n                                            <Card.Header>\r\n                                                {item.mes_ID}\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Title>{item.mes_status}</Card.Title>\r\n                                                <Card.Text>\r\n                                                    <img src={image} width=\"150px\" height=\"150px\" />\r\n                                                </Card.Text>\r\n                                                <Card.Footer>\r\n                                                    <a className=\"btn btn-outline-info\" href={item.mes_qr} download=\"qr.png\">Baixar QR</a>\r\n                                                </Card.Footer>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </main>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Cardapio\\index.js",["72","73","74","75","76","77","78","79","80"],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\service\\provider\\CardapioProvider.js",[],"C:\\Users\\Diego\\Documents\\pw1\\genrest-site\\src\\telas\\Config\\index.js",["81","82","83","84","85","86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":41,"column":17,"nodeType":"95","messageId":"96","endLine":41,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":3,"column":31,"nodeType":"95","messageId":"96","endLine":3,"endColumn":37},{"ruleId":"93","severity":1,"message":"98","line":13,"column":18,"nodeType":"95","messageId":"96","endLine":13,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":22,"column":8,"nodeType":"101","endLine":22,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":63,"column":49,"nodeType":"105","endLine":63,"endColumn":97},{"ruleId":"93","severity":1,"message":"98","line":14,"column":18,"nodeType":"95","messageId":"96","endLine":14,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":25,"column":8,"nodeType":"101","endLine":25,"endColumn":10,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"94","line":64,"column":17,"nodeType":"95","messageId":"96","endLine":64,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":102,"column":53,"nodeType":"105","endLine":102,"endColumn":101},{"ruleId":"93","severity":1,"message":"98","line":13,"column":18,"nodeType":"95","messageId":"96","endLine":13,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":22,"column":12,"nodeType":"95","messageId":"96","endLine":22,"endColumn":17},{"ruleId":"93","severity":1,"message":"108","line":22,"column":18,"nodeType":"95","messageId":"96","endLine":22,"endColumn":26},{"ruleId":"93","severity":1,"message":"109","line":28,"column":11,"nodeType":"95","messageId":"96","endLine":28,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":40,"column":8,"nodeType":"101","endLine":40,"endColumn":10,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"94","line":89,"column":17,"nodeType":"95","messageId":"96","endLine":89,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":114,"column":25,"nodeType":"95","messageId":"96","endLine":114,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":176,"column":53,"nodeType":"105","endLine":176,"endColumn":108},{"ruleId":"111","severity":1,"message":"112","line":185,"column":53,"nodeType":"105","endLine":185,"endColumn":120},{"ruleId":"93","severity":1,"message":"97","line":3,"column":31,"nodeType":"95","messageId":"96","endLine":3,"endColumn":37},{"ruleId":"93","severity":1,"message":"113","line":3,"column":39,"nodeType":"95","messageId":"96","endLine":3,"endColumn":43},{"ruleId":"93","severity":1,"message":"114","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":20},{"ruleId":"93","severity":1,"message":"115","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":13},{"ruleId":"93","severity":1,"message":"98","line":13,"column":18,"nodeType":"95","messageId":"96","endLine":13,"endColumn":25},{"ruleId":"93","severity":1,"message":"116","line":15,"column":12,"nodeType":"95","messageId":"96","endLine":15,"endColumn":17},{"ruleId":"93","severity":1,"message":"117","line":15,"column":19,"nodeType":"95","messageId":"96","endLine":15,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":21,"column":8,"nodeType":"101","endLine":21,"endColumn":10,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'r' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["121"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["122"],"'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'editcomidaShow' is assigned a value but never used.",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Card' is defined but never used.","'MesaProvider' is defined but never used.","'image' is defined but never used.","'mesas' is assigned a value but never used.","'setMesas' is assigned a value but never used.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},{"desc":"125","fix":"128"},{"desc":"125","fix":"129"},"Update the dependencies array to be: [history, user]",{"range":"130","text":"131"},{"range":"132","text":"131"},{"range":"133","text":"131"},{"range":"134","text":"131"},[875,877],"[history, user]",[963,965],[1686,1688],[851,853]]